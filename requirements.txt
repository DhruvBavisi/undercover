# Undercover Word Game - Project Requirements

## System Requirements
- Node.js >= 14.0.0
- npm >= 6.0.0
- MongoDB >= 4.4.0

## Project Structure
/undercover
├── client/           # React frontend
├── server/           # Express backend
├── src/             # Additional source files
└── assets/          # Game assets (*.png files)

## Client Dependencies (Frontend)
# Core Dependencies
react                    ^18.2.0
react-dom               ^18.2.0
vite                    ^5.1.4
axios                   ^1.8.1

# UI Framework & Components
@radix-ui/react-*       ^1.1.0 - ^2.2.4  # Various Radix UI components
tailwindcss             ^3.4.17
class-variance-authority ^0.7.1
lucide-react            ^0.454.0
clsx                    ^2.1.1

# Forms & Validation
@hookform/resolvers     ^3.9.1
react-hook-form        ^7.54.1
zod                    ^3.24.1

# Date & Time
date-fns               4.1.0
react-day-picker       8.10.1

# Routing & Navigation
react-router-dom       ^6.22.3

# Real-time Communication
socket.io-client       ^4.7.4

# Additional UI Components
embla-carousel-react   8.5.1
input-otp             1.4.1
react-resizable-panels ^2.1.7
recharts              2.15.0
sonner                ^1.7.1
vaul                  ^0.9.6

## Server Dependencies (Backend)
# Core
express                ^4.18.3
cors                   ^2.8.5
dotenv                ^16.4.5

# Database
mongoose              ^8.2.0

# Real-time Communication
socket.io             ^4.7.4

# Development Tools
nodemon              ^3.1.0

## Environment Setup
1. Client (.env):
   VITE_API_URL=http://localhost:3001/api
   VITE_SOCKET_URL=http://localhost:3001
   VITE_VERCEL_URL=https://undercover-game.vercel.app

2. Server (.env):
   MONGODB_URI=mongodb://localhost:27017/undercover-game
   PORT=3001
   NODE_ENV=development
   CLIENT_URL=http://localhost:5173
   VERCEL_URL=https://undercover-game.vercel.app
   BASE_API_URL=https://api.undercover-game.vercel.app
   SOCKET_URL=https://socket.undercover-game.vercel.app

## Setup Instructions
1. Clone the repository
2. Install client dependencies:
   ```
   cd client
   npm install --legacy-peer-deps
   ```

3. Install server dependencies:
   ```
   cd server
   npm install
   ```

4. Set up environment files:
   - Copy .env.example to .env in both client and server directories
   - Update the environment variables as needed

5. Start MongoDB service

6. Run the application:
   - Start server: cd server && npm run dev
   - Start client: cd client && npm run dev
   - Access the application at http://localhost:5173 or http://localhost:5174

## Development Tools
- ESLint for code linting
- PostCSS for CSS processing
- Tailwind for styling
- Vite for development and building 